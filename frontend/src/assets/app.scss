@use "sass:color";
@import "scheme";

:root {
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
}

* {
  font-family: $fontFamily;
  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
}

*::-webkit-scrollbar {
  background-color: $surface;
  max-width: 8px;
  max-height: 8px;
}

*::-webkit-scrollbar-thumb {
  background-color: $scrollbarThumb;
  border-radius: 0.5rem;
}

#app {
  height: 100vh;
  overflow: hidden;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html,
body {
  height: 100%;
}

body {

  background-color: $appBackground;
  color: $textDefault;
}

p {
  line-height: 1.5;
}

.btn-row {
  display: flex;
  gap: 1rem;

  &--fill {
    .btn,
    .btn--icon,
    .btn--icon-only {
      flex: auto;
    }
  }
}

.btn {
  padding: 1rem;
  border-radius: 0.5rem;

  font-size: $btnFontSize;

  border: none;

  color: $btnText;
  background-color: $btnBackground;
  border: 1px solid $btnBorderColor;

  transition: background-color 0.25s ease, transform 0.2s ease;
  cursor: pointer;

  text-decoration: none;

  &--l {
    text-align: left;
  }

  &--surface {
    background-color: $btnSurfaceBackground;

    &:disabled {
      background-color: $btnSurfaceDisabled;
    }
  }

  &--small {
    padding: 0.5rem 1rem;
    font-size: $btnSmallFontSize;
    border-radius: 0.25rem;
  }

  &--sm {
    padding: 0.5rem 1rem;
  }

  &:hover {
    background-color: $btnHoverBackground;
  }

  &:disabled {
    background-color: $btnDisabled;
    cursor: not-allowed;
    color: $btnDisabledText;
  }

  &:active:not(:disabled) {
    transform: scale(1.1);
  }
}

// Icon specific button styling
.btn--icon,
.btn--icon-only {
  padding: 0.5rem;

  > img,
  > svg {
    display: inline-block;
    vertical-align: middle;

    width: $btnIconWidth;
    height: $btnIconHeight;
    margin-right: $btnIconGap;

    fill: $btnIconFill;
  }

  &:disabled {
    color: $btnIconDisabledText;

    > img,
    > svg {
      fill: $btnIconDisabledFill;
    }
  }
}

.btn--icon.btn--small,
.btn--icon-only.btn--small {
  > img,
  > svg {
    width: $btnSmallIconWidth;
    height: $btnSmallIconHeight;
  }
}

// Styling for buttons with only icons
.btn--icon-only {
  > img,
  > svg {
    margin-right: 0;
  }
}

.back {
  padding: 0.5rem;
  border-radius: 0.5rem;

  border: none;
  background-color: $btnBackground;
  color: $btnText;

  transition: background-color 0.25s ease, transform 0.2s ease;
  line-height: 0;
  cursor: pointer;

  z-index: 1;

  &:hover {
    background-color: $primary;
  }
}

.back--floating {
  position: absolute;
  left: 1rem;
  top: 1rem;
}

table {
  width: 100%;
  border-collapse: collapse;
  border: 1px solid $surfaceLight;
}

td {
  background-color: $surface;
  border: 1px solid $surfaceLight;
  padding: 1rem;
}

th {
  background-color: $surface;
  border: 1px solid $surfaceLight;
  padding: 1rem;

  &:first-child {
    text-align: left;
  }
}

.page {
  position: relative;

  display: flex;
  flex-flow: column;

  &--middle {
    align-items: center;
  }

  &--center {
    align-items: center;
    justify-content: center;
  }

  &--overflow {
    width: 100%;
    height: 100%;
    overflow: auto;
  }
}

/* 
  Wrapper for centered floating content providing
  a dark background and backdrop filter
*/
.floating-wrapper {
  z-index: 2;
  position: fixed;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: rgba(0, 0, 0, 0.7);
  backdrop-filter: blur(5px);
  -webkit-backdrop-filter: blur(5px);
  overflow: auto;
}

.field {
  display: block;
  border-radius: 0.55rem;

  &__name {
    font-weight: bold;
    color: $fieldName;
  }

  &__desc {
    color: $fieldDesc;
    margin-bottom: 0.25rem;
  }
}

.section {
  display: flex;
  flex-flow: column;
  border: 1px solid #444;
  padding: 1rem;
  border-radius: 0.25rem;
  &__title {
    color: $sectionTitle;
    margin-bottom: 0.25rem;
  }

  &__desc {
    margin-bottom: 0.5rem;
  }

  &__values {
    display: flex;
    flex-flow: column;
    gap: 0.5rem;
  }
}

.input {
  display: block;
  margin-top: 0.25rem;
  width: 100%;
  padding: 0.5rem;
  border: none;
  background-color: $surfaceLight;
  border-radius: 0.25rem;
  margin-top: 0.5rem;
  font-size: 1rem;
  line-height: 1.5;
}

//  Wrapper for custom sized images
.qu-image-wrapper {
  position: relative;

  width: 100%;
  height: 100%;

  overflow: hidden;
}

// Question image styling. Required to be global
// due to runtime added class name for preloaded
// images
.qu-image {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  aspect-ratio: auto;

  // Fit for width
  &[data-fit="Width"] {
    width: 100%;
  }

  // Fit for height
  &[data-fit="Height"] {
    height: 100%;
  }

  // Fit for containing whole image
  &[data-fit="Contain"] {
    height: 100%;
    width: 100%;
    object-fit: contain;
  }

  // Fit for covering available space
  &[data-fit="Cover"] {
    height: 100%;
    width: 100%;
    object-fit: cover;
  }
}
